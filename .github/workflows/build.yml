name: CI / CD
on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python, pipenv and Pipfile packages
        uses: kojoru/prepare-pipenv@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Tests
        run: pipenv run python -m pytest

  deliver:
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Images with Docker Compose
        run: docker-compose build

      - name: Push Docker Images
        run: |
          docker-compose push
  deploy: 
    needs: [deliver]
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME=hannahan2/web-app
          script: |
            # Debug the environment
            echo "Debugging environment variables:"
            env
            echo "Using IMAGE_NAME: $IMAGE_NAME"
            # Stop running container
            docker stop $IMAGE_NAME || true
            # Remove old container
            docker rm $IMAGE_NAME || true
            # Pull the new image from Docker Hub
            docker pull $IMAGE_NAME:latest
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $IMAGE_NAME \
            $IMAGE_NAME:latest